@use "../styles/variables.scss" as *;

html,
body {
  height: 100%;
  font-family: "Comfortaa", "Segoe UI", sans-serif;
  background-color: rgb(var(--bg)); // Use RGB variable for background
  color: rgb(var(--text)); // Use RGB variable for text
}

// Full-height layout
:host {
  display: flex;
  flex-direction: column;
  min-height: 100vh; // Ensure the layout spans the full viewport height
}

/* Overlay covers the whole screen on load */
.reveal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}

// ====================
// üåê NAVBAR (Desktop)
// ====================
.navbar {
  position: fixed; // Keep the header fixed
  top: 0;
  left: 0;
  width: 100%; // Full width
  z-index: 1000; // Ensure it stays above other elements
  background-color: rgba(var(--bg), 1); // Use RGB variable for background
  border-bottom: 1px solid rgb(var(--light-gray)); // Use RGB variable for light gray
  padding: 1.5rem 2rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: var(--header-height); // Use CSS variable for header height
  transition: opacity 0.6s ease, transform 0.6s ease; // Smooth fade and slide animation

  &.hidden {
    opacity: 0; // Fade out
    transform: translateY(-100%); // Slide up
    pointer-events: none; // Disable interactions when hidden
  }

  .logo {
    font-size: 1.8rem;
    font-weight: bold;
    color: rgb(var(--accent)); // Use RGB variable for accent color
    text-decoration: none;
  }

  .menu-toggle {
    display: none; // Hidden by default
  }

  .nav-links {
    list-style: none;
    display: flex;
    gap: 2rem;
    align-items: center; // Align items vertically

    li {
      a {
        text-decoration: none;
        color: rgb(var(--text)); // Use RGB variable for text
        font-weight: 500;
        font-size: 1rem;
        position: relative;
        cursor: pointer;

        &:hover {
          color: rgb(var(--accent)); // Use RGB variable for accent color

          &::after {
            content: "";
            position: absolute;
            left: 0;
            bottom: -4px;
            width: 100%;
            height: 2px;
            background-color: rgb(
              var(--accent)
            ); // Use RGB variable for accent color
          }
        }
      }

      .custom-language-selector {
        position: relative;
        background-color: rgb(var(--bg));
        border: 1px solid rgb(var(--light-gray));
        color: rgb(var(--text));
        padding: 0.4rem 0.8rem;
        border-radius: 8px;
        font-size: 0.9rem;
        cursor: pointer;
        user-select: none;
        transition: box-shadow 0.2s ease, border-color 0.2s ease;

        &.open,
        &:hover,
        &:has(.language-options:hover) {
          border-color: rgb(var(--accent)); // Use RGB variable for accent color
          box-shadow: 0 0 6px var(--box-shadow-medium); // Use box-shadow variable
        }

        .language-options {
          position: absolute;
          top: 110%;
          left: 0;
          right: 0;
          background: rgb(var(--bg));
          border: 1px solid rgb(var(--light-gray));
          box-shadow: 0 4px 10px var(--box-shadow-heavy);
          border-radius: 8px;
          list-style: none;
          margin: 0;
          padding: 0;
          z-index: 1000;
          overflow: hidden;

          li {
            padding: 0.5rem 0.7rem;
            border: none;
            border-radius: 0;
            cursor: pointer;
            transition: background-color 0.2s ease;

            &:hover {
              background-color: rgb(var(--accent));
              color: rgb(var(--bg));
            }

            &:first-child {
              border-top-left-radius: 8px;
              border-top-right-radius: 8px;
            }

            &:last-child {
              border-bottom-left-radius: 8px;
              border-bottom-right-radius: 8px;
            }
          }
        }
      }

      .custom-theme-selector {
        position: relative;
        background-color: rgb(var(--bg));
        border: 1px solid rgb(var(--light-gray));
        color: rgb(var(--text));
        padding: 0.4rem 0.8rem;
        border-radius: 8px;
        font-size: 0.9rem;
        cursor: pointer;
        user-select: none;
        color: rgb(var(--text));
        transition: box-shadow 0.2s ease, border-color 0.2s ease;
        display: flex;
        align-items: center;
        gap: 0.4rem;

        i {
          font-size: 1rem;
          color: rgb(var(--accent));
        }

        &.open,
        &:hover,
        &:has(.theme-options:hover) {
          border-color: rgb(var(--accent)); // Use RGB variable for accent color
          box-shadow: 0 0 6px var(--box-shadow-medium); // Use box-shadow variable
        }

        .theme-options {
          position: absolute;
          top: 110%;
          left: 50%; // üîÅ Start from the center
          transform: translateX(-50%); // üîÅ Center horizontally
          background: rgb(var(--bg));
          border: 1px solid rgb(var(--light-gray));
          box-shadow: 0 4px 10px var(--box-shadow-heavy);
          border-radius: 8px;
          list-style: none;
          margin: 0;
          padding: 0;
          z-index: 1000;

          li {
            display: flex;
            align-items: center;
            gap: 0.6rem;
            padding: 0.5rem 0.8rem;
            cursor: pointer;
            transition: background-color 0.2s ease;
            font-size: 0.95rem;

            i {
              width: 1.5rem; // ‚úÖ fixed width for alignment
              text-align: center;
              font-size: 1.1rem;
              color: rgb(var(--accent));
              flex-shrink: 0;
            }

            span {
              flex: 1;
              color: rgb(var(--text));
            }

            &:hover {
              background-color: rgb(var(--accent));

              i,
              span {
                color: rgb(var(--bg));
              }
            }

            &:first-child {
              border-top-left-radius: 8px;
              border-top-right-radius: 8px;
            }

            &:last-child {
              border-bottom-left-radius: 8px;
              border-bottom-right-radius: 8px;
            }
          }
        }
      }
    }
  }

  @media screen and (min-width: 768px) {
    position: fixed; // Fixed only for desktop
  }
}

// ====================
// üìÑ MAIN CONTENT
// ====================
main {
  flex: 1; // Allow the main content to grow and fill available space
  display: flex;
  flex-direction: column;
  // padding-top: 80px; // Add padding equal to the height of the fixed header
  padding-bottom: 0; // No padding needed for the footer
  background-color: rgb(var(--bg)); // Use RGB variable for light gray
  overflow-y: auto; // Ensure the main content is scrollable
}

// ====================
// üìé FOOTER
// ====================
.footer {
  position: static; // Default position
  bottom: 0;
  left: 0;
  width: 100%; // Ensure it spans the full width
  height: var(--footer-height); // Use CSS variable for footer height
  padding: 0 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgb(var(--bg)); // Use RGB variable for background
  color: rgb(var(--text)); // Use RGB variable for text
  font-size: 0.85rem;
  border-top: 1px solid rgb(var(--light-gray)); // Use RGB variable for light gray
}

// ====================
// üì± MOBILE MENU OVERLAY
// ====================
@media screen and (max-width: 768px) {
  main {
    padding: 0; // Remove padding on mobile
  }

  .navbar {
    height: var(--header-height-mobile); // Use mobile header height
    padding: 0.5rem 1.2rem; // Adjust padding for mobile
    
    .logo {
      font-size: 1.3rem !important;
    }
  }

  .menu-toggle {
    display: block !important; // Ensure it's visible in mobile view
    position: absolute;
    top: 0.3rem;
    right: 0.3rem;
    width: 50px; // Fixed width
    height: 50px; // Fixed height
    background: transparent !important; // Transparent background
    border: none;
    color: rgb(var(--accent)); // Use RGB variable for background
    cursor: pointer;
    z-index: 1000; // Ensure it overlays the content
    display: flex;

    i {
      font-size: 1.8rem; // Adjust icon size
    }
  }

  .nav-links {
    position: fixed;
    top: 0;
    right: -100%; // Initially hidden off-screen
    width: 60%;
    height: 100vh;
    background-color: rgb(var(--light-gray)); // Use RGB variable for light gray
    z-index: 999;
    padding: 6rem 2rem 2rem;
    gap: 2rem;
    flex-direction: column;
    align-items: flex-start !important;
    display: flex;
    transition: right 0.5s ease-in-out; // Smooth transition effect
    box-shadow: -4px 0 10px var(--box-shadow-medium); // Use box-shadow variable

    &.open {
      right: 0; // Slide in when open
    }

    li a {
      font-size: 1.2rem !important;
      font-weight: bold !important;
      padding: 0.5rem 0;
      text-decoration: none;
    }
  }
}
