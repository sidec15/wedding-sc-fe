@use "../../../styles/variables.scss" as *;
@use "../../../styles/mixins.scss" as *;

.contact-form {
  max-width: 1400px;
  margin: 0 auto;
  padding: 2rem;
  font-family: var(--font-family-base);
  color: rgb(var(--text));

  h2 {
    color: rgb(var(--accent));
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  h3 {
    color: rgb(var(--accent));
    font-size: 1.4rem;
    text-align: center;
    margin-bottom: 0.5rem;
  }

  h4 {
    color: rgb(var(--accent));
    font-size: 1.1rem;
    margin: 1rem 0;
  }

  p {
    text-align: center;
    margin-bottom: 2rem;
    line-height: 1.6;
  }

  .form-row {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    gap: 2rem;

    .contact-form-image {
      width: 200px;
      flex-shrink: 0;
      img {
        width: 100%;
        height: auto;
        display: block;
      }
    }

    .contact-form-section {
      flex: 1 1 0%;
      max-width: 800px;
      margin: 0 auto;
      padding: 1.5rem;
      background: rgba(var(--bg), 0.95);
      border-radius: 12px;
      box-shadow: 0 4px 20px var(--box-shadow-light);
      backdrop-filter: var(--backdrop-filter);

      .section-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: rgb(var(--text));
        margin-bottom: 1.5rem;
        text-align: center;
      }

      .contact-form {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
      }

      .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }

      .form-label {
        font-weight: 500;
        color: rgba(var(--text), 0.8);
        font-size: 0.9rem;
      }

      .form-input {
        padding: 0.75rem;
        font-size: 1rem;
        transition: all 0.3s ease;

        border: 1px solid rgb(var(--light-gray));
        border-radius: 4px;
        background-color: rgb(var(--bg));
        color: rgb(var(--text));

        &:focus {
          outline: none;
          border-color: rgb(var(--accent));
        }

        &:-webkit-autofill {
          box-shadow: 0 0 0 1000px rgb(var(--bg)) inset !important;
          -webkit-text-fill-color: rgb(var(--text)) !important;
          transition: background-color 5000s ease-in-out 0s;
          caret-color: rgb(var(--text));
        }

        &.error {
          border-color: var(--error-border);
        }
      }

      :host ::ng-deep app-rich-text-editor .rte-wrapper {
        padding: 0.75rem;
        border: 2px solid rgb(var(--light-gray));
        border-radius: 8px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: rgb(var(--bg));
        color: rgb(var(--text));
      }

      :host ::ng-deep app-rich-text-editor .rte-wrapper:focus-within {
        outline: none;
        border-color: rgb(var(--accent));
      }

      :host ::ng-deep app-rich-text-editor .rte-wrapper.error {
        border-color: var(--error-border);
      }

      :host ::ng-deep app-rich-text-editor .rte-wrapper .NgxEditor__Content {
        font-size: 1rem;
        color: rgb(var(--text));
        background: transparent;
      }

      .error-message {
        color: var(--error-text);
        font-size: 0.8rem;
        margin-top: 0.25rem;
      }

      .submit-btn {
        background: linear-gradient(135deg, rgb(var(--accent)), rgb(var(--hover)));
        color: #fff;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        align-self: flex-start;

        &:hover:not(:disabled) {
          transform: translateY(-2px);
          box-shadow: 0 4px 12px rgba(var(--accent), 0.3);
        }

        &:disabled {
          background: #6c757d;
          cursor: not-allowed;
          transform: none;
          box-shadow: none;
        }
      }

      .char-count {
        display: flex;
        gap: 0.75rem;
        font-size: 0.85rem;
        color: rgba(var(--text), 0.7);
      }
    }
  }

  .hidden {
    display: none;
  }
}

/* ===========================
   Contact Form — Mobile (≤768px)
   =========================== */
@media (max-width: 768px) {
  .contact-form {
    padding: 1rem !important;
    margin-top: 1rem !important;

    h2 {
      font-size: 2rem !important;
      margin-bottom: 1.5rem !important;
    }

    h3 {
      font-size: 1.2rem !important;
    }

    .form-row {
      flex-direction: column !important;
      gap: 1rem !important;

      .contact-form-section {
        padding: 1rem !important;
        border-radius: 10px !important;
        box-shadow: 0 3px 12px var(--box-shadow-light) !important;

        .section-title {
          font-size: 1.1rem !important;
        }

        .contact-form {
          gap: 1rem !important;
        }

        .form-group {
          gap: 0.4rem !important;
        }

        .form-label {
          font-size: 0.95rem !important;
        }

        .form-input {
          padding: 0.65rem 0.75rem !important;
          font-size: 1rem !important;
          border-radius: 6px !important;
        }

        /* Rich text editor area */
        :host ::ng-deep app-rich-text-editor .rte-wrapper {
          padding: 0.6rem !important;
          border-radius: 8px !important;
        }
        :host ::ng-deep app-rich-text-editor .rte-wrapper .NgxEditor__Content {
          font-size: 1rem !important;
          line-height: 1.5 !important;
        }

        .char-count {
          justify-content: flex-end !important;
          font-size: 0.85rem !important;
          margin-top: -0.25rem !important;
        }

        .submit-btn {
          align-self: stretch !important;
          padding: 0.75rem 1rem !important;
          font-size: 1rem !important;
          border-radius: 10px !important;
        }
      }

    }
  }

  /* Mobile images outside form-row */
  .contact-form-image {
    margin-left: auto;
    margin-right: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100% !important;

    img {
      width: 200px !important;
      height: auto;
      display: block;
    }
  }
}

@keyframes slideIn {
  from {
    transform: translate(-50%, -100%);
    opacity: 0;
  }
  to {
    transform: translate(-50%, 0);
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
