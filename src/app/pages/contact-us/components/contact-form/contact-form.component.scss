@use "../../../../../styles/variables.scss" as *;
@use "../../../../../styles/mixins.scss" as *;
@use "../../styles/contact-us.scss" as contactUs;

.contact-form {
  max-width: 1400px;
  margin: 0 auto;
  padding: 2rem;
  font-family: var(--font-family-base);
  color: rgb(var(--text));

  h2 {
    text-align: center;
    margin-bottom: 1rem;
  }

  h3 {
    text-align: center;
    margin-bottom: 0.5rem;
  }

  p {
    text-align: center;
    margin-bottom: 2rem;
    line-height: 1.6;
  }

  .form-row {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    gap: 2rem;

    .contact-form-image {
      width: 200px;
      flex-shrink: 0;
      img {
        width: 100%;
        height: auto;
        display: block;
      }
    }

    .contact-form-container {
      flex: 1 1 0%;
      max-width: 800px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      gap: 2rem;
      padding: 2.5rem;
      background: rgba(var(--light-gray), 0.3);
      border-radius: 18px;
      box-shadow: 0 4px 16px rgba(var(--mask), 0.1);

      .form-group {
        margin-bottom: 1.5rem;

        label {
          display: block;
          margin-bottom: 0.5rem;

          &.privacy-consent-label {
            font-size: 0.875rem;
          }
        }

        input[type="text"],
        input[type="email"],
        input[type="tel"],
        textarea {
          width: 100%;
          padding: 0.5rem;
          border: 1px solid rgb(var(--light-gray));
          border-radius: 4px;
          background-color: rgb(var(--bg));
          color: rgb(var(--text));

          &:focus {
            outline: none;
            border-color: rgb(var(--accent));
          }

          &:-webkit-autofill {
            box-shadow: 0 0 0 1000px rgb(var(--bg)) inset !important;
            -webkit-text-fill-color: rgb(var(--text)) !important;
            transition: background-color 5000s ease-in-out 0s;
            caret-color: rgb(var(--text));
          }
        }
      }

      .checkbox {
        display: flex;
        align-items: center;
        gap: 0.5rem;

        input[type="checkbox"] {
          margin: 0;
        }

        label {
          margin: 0;
        }

        a {
          color: rgb(var(--accent));
          text-decoration: underline;

          &:hover {
            color: rgb(var(--hover));
          }
        }
      }

      .btn {
        align-self: center;
      }

      .error {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
      }

      .char-count {
        text-align: right;
        font-size: 0.875rem;
        color: rgb(var(--text));
        opacity: 0.7;
        margin-top: 0.25rem;
      }

    }
  }

  .hidden {
    display: none;
  }

  .success-message {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #4caf50;
    color: white;
    padding: 1rem 2rem;
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    animation: slideIn 0.3s ease-out, fadeOut 0.3s ease-in 4.7s forwards;
    z-index: 1000;
    font-weight: 500;
    text-align: center;
    min-width: 300px;
  }

  .error-message {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #dc3545;
    color: white;
    padding: 1rem 2rem;
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    animation: slideIn 0.3s ease-out, fadeOut 0.3s ease-in 4.7s forwards;
    z-index: 1000;
    font-weight: 500;
    text-align: center;
    min-width: 300px;
  }
}

@media screen and (max-width: 768px) {
  .contact-form {
    padding: 3rem;
    .contact-form-container {
      padding: 2rem 1rem !important;
    }
  }

  :host ::ng-deep .contact-form-image {
    margin-left: auto;
    margin-right: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    img {
      width: 300px !important;
      height: auto;
      display: block;
    }
  }
}

@keyframes slideIn {
  from {
    transform: translate(-50%, -100%);
    opacity: 0;
  }
  to {
    transform: translate(-50%, 0);
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
