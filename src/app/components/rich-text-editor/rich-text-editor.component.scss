@use "../../../styles/variables.scss" as *;

/* ===== NgxEditor minimal, theme-aware overrides ===== */
/* Keep :host ::ng-deep when this stays in the component's SCSS */
:host ::ng-deep {
  /* Toolbar container */
  .NgxEditor__MenuBar {
    background: rgba(var(--bg), 1);
    border: 1px solid rgba(var(--text), 0.15);
    border-radius: 8px;
    padding: .25rem;
  }

  /* Base controls (buttons + emoji) */
  .NgxEditor__MenuBar button,
  .emoji-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: 36px;
    min-width: 36px;
    padding: 0 .6rem;
    border-radius: 8px;
    border: 1px solid rgba(var(--text), 0.2);
    background: rgba(var(--bg), 0.9);
    color: rgb(var(--text));
    cursor: pointer;
    transition: background .15s ease, border-color .15s ease;

    &:hover {
      background: rgba(var(--text), 0.08);
      border-color: rgba(var(--text), 0.35);
    }

    &.ngx-editor-active,
    &[aria-pressed="true"] {
      background: rgba(var(--accent), 0.18);
      border-color: rgba(var(--accent), 0.6);
    }

    &:focus-visible {
      outline: 2px solid rgba(var(--accent), .7);
      outline-offset: 2px;
    }
  }

  /* --- HEADING DROPDOWN (no double button) --- */
  .NgxEditor__MenuBar .NgxEditor__Dropdown {
    background: transparent;
    border: none;
    padding: 0;
    margin: 0;
    box-shadow: none;
  }

  /* Trigger button inside dropdown */
  .NgxEditor__MenuBar .NgxEditor__Dropdown > button {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    height: 36px;
    min-width: 110px;
    padding: 0 .7rem;
    border-radius: 8px;
    border: 1px solid rgba(var(--text), 0.2);
    background: rgba(var(--bg), 0.9);
    color: rgb(var(--text));
    cursor: pointer;
    transition: background .15s ease, border-color .15s ease;

    &:hover {
      background: rgba(var(--light-gray), 1);
      border-color: rgba(var(--text), 0.35);
    }
    &.ngx-editor-active,
    &[aria-pressed="true"] {
      background: rgba(var(--accent), 0.18);
      border-color: rgba(var(--accent), 0.6);
    }
    &:focus-visible {
      outline: 2px solid rgba(var(--accent), .7);
      outline-offset: 2px;
    }

    .NgxEditor__Dropdown--Caret {
      margin-left: .5rem;
      font-size: .8rem;
      opacity: .75;
      line-height: 1;
    }
  }

  /* --- DROPDOWN PANEL & OPTIONS (coherent hover/focus, no white contour) --- */
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel {
    background: rgba(var(--light-gray), 1);
    color: rgb(var(--text));
    border: 1px solid rgba(var(--text), 0.2);
    border-radius: 8px;
    padding: .25rem 0;
    box-shadow: 0 6px 22px rgba(0,0,0,.28);
    overflow: hidden; /* hides any item edge artifacts */
  }

  /* Some builds render li > button; support both */
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li,
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li > button,
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li > a {
    display: block;
    width: 100%;
    padding: .5rem 1rem;
    font-size: .95rem;
    color: rgb(var(--text));
    background: transparent;
    border: 0;             /* remove white contours */
    border-radius: 0;      /* flush with panel edges */
    outline: none;
    cursor: pointer;
    transition: background .12s ease;
  }

  /* Hover state */
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li:hover,
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li > button:hover,
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li > a:hover {
    background: rgba(var(--text), 0.08);
  }

  /* Active / keyboard focus state (coherent with toolbar focus) */
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li:focus-visible,
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li > button:focus-visible,
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li > a:focus-visible {
    background: rgba(var(--accent), 0.2);
    outline: 2px solid rgba(var(--accent), .7);
    outline-offset: -2px; /* keeps outline inside the panel */
  }

  .NgxEditor__Dropdown--DropdownMenu button{
    border-radius: 0;

    &:hover{
      background: rgba(var(--light-gray), 1) !important;
    }
  }

  /* Editor frame: keep your global form borders; only fix background */
  .editor-content {
    background: rgba(var(--bg), 1) !important;
    border: 1px solid rgba(var(--text), 0.15);
    border-radius: 4px;
  }

  /* Actual editable area */
  .NgxEditor__Content {
    min-height: 140px;
    padding: 0.9rem 1rem;
    background: rgba(var(--bg), 1) !important;
    color: rgb(var(--text)) !important;
    caret-color: rgb(var(--text)) !important;
  }

  /* Placeholder */
  .NgxEditor__Placeholder {
    color: rgba(var(--text), 0.45) !important;
  }

  /* Typography helpers */
  .NgxEditor__Content a {
    color: rgb(var(--accent));
    text-decoration: underline;
  }
  .NgxEditor__Content code {
    background: rgba(var(--bg), 0.08);
    border: 1px solid rgba(var(--text), 0.15);
    border-radius: 6px;
    padding: .1rem .35rem;
  }
  .NgxEditor__Content pre {
    background: rgba(var(--bg), 0.08);
    border: 1px solid rgba(var(--text), 0.15);
    border-radius: 8px;
    padding: .75rem .9rem;
    overflow: auto;
  }
  .NgxEditor__Content blockquote {
    border-left: 3px solid rgba(var(--text), 0.25);
    margin: .5rem 0;
    padding: .25rem .75rem;
    color: rgba(var(--text), 0.85);
    background: rgba(var(--bg), 0.06);
    border-radius: 6px;
  }
}

/* ===== Your wrapper/tools (outside of ::ng-deep) ===== */
.rte-wrapper {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.rte-toolbar {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* .emoji-btn already normalized above */
