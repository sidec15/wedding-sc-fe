@use "../../../styles/variables.scss" as *;

/* ===== NgxEditor minimal, theme-aware overrides ===== */
/* Keep :host ::ng-deep when this stays in the component's SCSS */
:host ::ng-deep {
  /* Toolbar container */
  .NgxEditor__MenuBar {
    background: rgba(var(--light-gray), 1);
    border: 1px solid rgba(var(--text), 0.15);
    border-radius: 8px;
    padding: .25rem;
  }

  /* Base controls (buttons + emoji) */
  .NgxEditor__MenuBar button,
  .emoji-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: 36px;
    min-width: 36px;
    padding: 0 .6rem;
    border-radius: 8px;
    border: 1px solid rgba(var(--text), 0.2);
    background: rgba(var(--bg), 0.9);
    color: rgb(var(--text));
    cursor: pointer;
    transition: background .15s ease, border-color .15s ease;

    &:hover {
      background: rgba(var(--text), 0.08);
      border-color: rgba(var(--text), 0.35);
    }

    &.ngx-editor-active,
    &[aria-pressed="true"] {
      background: rgba(var(--accent), 0.18);
      border-color: rgba(var(--accent), 0.6);
    }
  }

  /* --- HEADING DROPDOWN FIXES --- */
  /* Make the dropdown container transparent (no border/background),
     so we don't get the "button under button" effect */
  .NgxEditor__MenuBar .NgxEditor__Dropdown {
    background: transparent;
    border: none;
    padding: 0;
    margin: 0;
    box-shadow: none;
  }

  /* Style only the trigger button INSIDE the dropdown */
  .NgxEditor__MenuBar .NgxEditor__Dropdown > button {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;   /* label left, caret right */
    height: 36px;
    min-width: 110px;                 /* room for label + caret */
    padding: 0 .7rem;
    border-radius: 8px;
    border: 1px solid rgba(var(--text), 0.2);
    background: rgba(var(--bg), 0.9);
    color: rgb(var(--text));
    cursor: pointer;
    transition: background .15s ease, border-color .15s ease;

    &:hover {
      background: rgba(var(--text), 0.08);
      border-color: rgba(var(--text), 0.35);
    }

    &.ngx-editor-active,
    &[aria-pressed="true"] {
      background: rgba(var(--accent), 0.18);
      border-color: rgba(var(--accent), 0.6);
    }

    /* caret */
    .NgxEditor__Dropdown--Caret {
      margin-left: .5rem;
      font-size: .8rem;
      opacity: .75;
      line-height: 1;
    }
  }

  /* Dropdown panel + items (no white contour) */
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel {
    background: rgba(var(--light-gray), 1);
    color: rgb(var(--text));
    border: 1px solid rgba(var(--text), 0.2);
    border-radius: 8px;
    padding: .25rem 0;
    box-shadow: 0 6px 22px rgba(0,0,0,.28);
    overflow: hidden;                 /* prevents side outlines on items */
  }
  .NgxEditor__Dropdown .NgxEditor__Dropdown--Panel li {
    padding: .5rem 1rem;
    font-size: .95rem;
    cursor: pointer;
    transition: background .12s ease;
    margin: 0;                        /* remove gaps that show panel bg */
    border: 0;                        /* no borders on items */
    border-radius: 0;                 /* keep edges flush with panel */
    outline: none;

    &:hover {
      background: rgba(var(--accent), 0.15);
    }
  }

  /* Editor frame: keep your global form borders; only fix background */
  .editor-content {
    background: rgba(var(--light-gray), 1) !important;
  }

  /* Actual editable area */
  .NgxEditor__Content {
    min-height: 140px;
    padding: 0.9rem 1rem;
    background: rgba(var(--light-gray), 1) !important; /* dark pane */
    color: rgb(var(--text)) !important;                /* light text */
    caret-color: rgb(var(--text)) !important;
  }

  /* Placeholder */
  .NgxEditor__Placeholder {
    color: rgba(var(--text), 0.45) !important;
  }

  /* Typography helpers */
  .NgxEditor__Content a {
    color: rgb(var(--accent));
    text-decoration: underline;
  }
  .NgxEditor__Content code {
    background: rgba(var(--bg), 0.08);
    border: 1px solid rgba(var(--text), 0.15);
    border-radius: 6px;
    padding: .1rem .35rem;
  }
  .NgxEditor__Content pre {
    background: rgba(var(--bg), 0.08);
    border: 1px solid rgba(var(--text), 0.15);
    border-radius: 8px;
    padding: .75rem .9rem;
    overflow: auto;
  }
  .NgxEditor__Content blockquote {
    border-left: 3px solid rgba(var(--text), 0.25);
    margin: .5rem 0;
    padding: .25rem .75rem;
    color: rgba(var(--text), 0.85);
    background: rgba(var(--bg), 0.06);
    border-radius: 6px;
  }
}

/* ===== Your wrapper/tools (outside of ::ng-deep) ===== */
.rte-wrapper {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.rte-toolbar {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* No separate .emoji-btn rules needed here:
   it is already normalized alongside toolbar buttons above */
