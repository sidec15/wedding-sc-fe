@use "../../../styles/variables.scss" as *;
@use "../../../styles/mixins.scss" as *;

:host {
  display: block; // Ensures the app-carousel element behaves like a block-level element (fills available width)
  height: 100%; // Allows this component to expand to the full height given by the parent layout
}

.carousel {
  width: 100%; // Makes the internal .carousel div span the full width of the host component
  height: auto; // Ensures the .carousel fills the full height of the app-carousel host
  overflow: hidden; // Hides any overflowing child content (e.g., sliding images going outside bounds)
  position: relative; // Enables absolute positioning for internal elements like .slide or .overlay
  min-height: 150px; // Sets a minimum height for the carousel to ensure it is usable even with few slides

  .slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 1s ease-in-out;
    padding: 0rem 1rem 2rem 1rem;
    text-align: center;

    &.visible {
      opacity: 1;
      position: relative;
    }
  }

  .progress-bar-container {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: var(--progress-bar-size);
    background-color: rgba(255, 255, 255, 0.2);
    overflow: hidden;
    z-index: 1;

    .progress-bar {
      height: 100%;
      background-color: rgb(var(--accent));
      width: 100%;
      transition: width 0s; // no transition, we're animating via frame loop
    }
  }

  .gallery-buttons {
    position: absolute;
    bottom: calc(var(--progress-bar-size) + 12px);
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 1rem;
    z-index: 3;
    pointer-events: none;

    .prev-btn,
    .next-btn {
      pointer-events: all;
      width: 48px;
      height: 48px;
      border-radius: 50%;
      background: var(--carousel-gallery-buttons-background);
      backdrop-filter: blur(4px);
      border: 1px solid var(--carousel-gallery-buttons-border-color);
      color: var(--carousel-gallery-buttons-color);
      font-size: 1.6rem;
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.2s ease,
        box-shadow 0.3s ease;

      // Desktop-only hover effects
      @media (hover: hover) and (pointer: fine) {
        &:hover {
          background-color: var(--carousel-gallery-buttons-hover-color);
          transform: scale(1.05);
          box-shadow: 0 4px 8px var(--box-shadow-medium);
        }
      }

      &:active {
        transform: scale(0.95);
      }
    }
  }
}

// Mobile adjustments
@media (max-width: 768px) {
  .carousel {
    .gallery-buttons {
      .prev-btn,
      .next-btn {
        width: 42px;
        height: 42px;
        font-size: 1.3rem;
      }
    }
  }
}
