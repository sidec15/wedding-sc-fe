@use "../../../styles/variables.scss" as *;
@use "../../../styles/mixins.scss" as *;

:host {
  display: block; // Ensures the app-carousel element behaves like a block-level element (fills available width)
  height: 100%; // Allows this component to expand to the full height given by the parent layout
}

.carousel {
  width: 100%; // Makes the internal .carousel div span the full width of the host component
  height: 100%; // Ensures the .carousel fills the full height of the app-carousel host
  overflow: hidden; // Hides any overflowing child content (e.g., sliding images going outside bounds)
  position: relative; // Enables absolute positioning for internal elements like .slide or .overlay

  .slide {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 0;
    width: 100%;
    height: 100%; // Ensure slide takes full height of carousel
    object-fit: cover;
    pointer-events: none;
    transition: opacity 1s ease-in-out;
  }

  .overlay {
    min-height: 1px; // garantisce che occupi altezza anche se Ã¨ vuoto
    position: absolute;
    top: 0;
    bottom: 0;
    width: 25%;
    right: 5%;
    height: 100%; // Match the height of .slide
    overflow: hidden; // Hide overflowing text
    background: rgba(var(--text-mask), 0.7);
    backdrop-filter: blur(4px);
    padding: 1.5rem;
    box-shadow: 0 2px 10px var(--box-shadow-heavy);
    display: flex;
    flex-direction: column; // Ensure h3 and p are stacked vertically
    align-items: flex-start; // Align text to the left
    // justify-content: center; // Center content vertically
    z-index: 1; // Ensure text is above the image

    h3 {
      font-size: 1.4rem;
      margin-bottom: 0.5rem; // Add spacing below h3
      color: rgb(var(--accent));
    }

    p {
      font-size: 1.2rem;
      margin: 0; // Remove default margin
      color: rgb(var(--text)); // Ensure text color is readable
      line-height: 1.5; // Adjust line height for readability
    }
  }

  .progress-bar-container {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: var(--progress-bar-size);
    background-color: rgba(255, 255, 255, 0.2);
    overflow: hidden;
    z-index: 2;

    .progress-bar {
      height: 100%;
      background-color: rgb(var(--accent));
      width: 100%;
      transition: width 0s; // no transition, we're animating via frame loop
    }
  }

  .gallery-buttons {
    // Default desktop styles
    position: absolute;
    bottom: 2rem;
    left: 80px;
    transform: translateX(-50%);
    display: flex;
    gap: 1rem;
    z-index: 3;
    backdrop-filter: blur(var(--backdrop-blur));

    &.desktop {
      // Keep original desktop styles
      position: absolute;
      bottom: 2rem;
      left: 80px;
      transform: translateX(-50%);
      display: flex;
      gap: 1rem;
      z-index: 3;
      .prev-btn,
      .next-btn {
        background: rgba(var(--text-mask), 0.6);
        border: none;
        color: rgb(var(--text-mask));
        font-size: 1.2rem;
        cursor: pointer;
        padding: 0.5rem 1rem;
        border-radius: 5px;
        margin: 0;
      }
    }
  }
}

@media (max-width: 768px) {
  .carousel {
    .slide {
      height: 100%;
    }

    .gallery-buttons {
      &.mobile {
        bottom: 26vh;
        left: 0;
        width: 100%;
        transform: none;
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        z-index: 2;
        padding: 0 0.5rem;
        gap: 0;

        .prev-btn,
        .next-btn {
          background: rgba(var(--text-mask), 0.8);
          border: none;
          color: rgb(var(--text-mask));
          font-size: 1.2rem !important;
          cursor: pointer;
          padding: 0.5rem 1rem !important;
          border-radius: 5px;
          margin: 0;
        }
      }

      &.hidden {
        display: none; // Hide buttons when not needed
      }
    }

    .overlay {
      width: 100%;
      bottom: 0;
      top: auto;
      left: 0;
      padding: 1rem;
      padding-bottom: 3rem; // Reserve space for the Show More button
      background: rgba(var(--text-mask), 0.75);
      border-top-left-radius: 12px;
      border-top-right-radius: 12px;
      transition: max-height 0.3s ease;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;

      max-height: 25vh;
      overflow: hidden;

      &.expanded {
        max-height: 100%;
        overflow-y: auto;
        padding-bottom: 1rem; // Remove reserved space when expanded
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }

      h3,
      p {
        margin: 0;
      }

      h3 {
        font-size: 1.5rem;
      }

      p {
        font-size: 1.3rem;
      }

      .button-container {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        padding: 0.5rem 0;
        display: flex;
        justify-content: center;
        align-items: center;

        // background: rgba(var(--text-mask), 0.7);
        // backdrop-filter: blur(8px);
        // Add shadow effect at the bottom
        &::after {
          @include shadow-gradient(to top, 100%); // Shadow fades upward
          bottom: 0;
        }

        .show-btn {
          background: rgba(var(--text-mask), 1);
          border: none;
          border-radius: 4px;
          padding: 0.3rem 0.8rem;
          font-size: 0.9rem;
          font-weight: bold;
          color: rgb(var(--accent));
          cursor: pointer;
          z-index: 1;
        }
      }
    }

    .progress-bar-container {
      display: none; // Hide default linear progress bar on mobile
    }

    .border-progress {
      position: absolute;
      inset: 0;
      pointer-events: none;
      z-index: 2;

      .side {
        position: absolute;
        background-color: rgb(var(--accent));
        transition: width 0.2s linear, height 0.2s linear;
      }

      .top {
        top: 0;
        left: 0;
        height: var(--progress-bar-mobile-size);
      }

      .right {
        top: 0;
        right: 0;
        width: var(--progress-bar-mobile-size);
      }

      .bottom {
        bottom: 0;
        left: 0;
        height: var(--progress-bar-mobile-size);
      }

      .left {
        top: 0;
        left: 0;
        width: var(--progress-bar-mobile-size);
      }
    }
  }
}
